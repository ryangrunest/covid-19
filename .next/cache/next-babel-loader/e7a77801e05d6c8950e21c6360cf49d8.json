{"ast":null,"code":"var _jsxFileName = \"/Users/ryangrunest/Developer/CurrentProjects/covid-19/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Head from \"next/head\";\nimport { countries } from \"../countries.js\";\nimport { apiKey } from \"../apikey\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst Index = props => {\n  const {\n    0: selectedCountry,\n    1: setSelectedCountry\n  } = useState(\"Afghanistan\");\n  const {\n    0: confirmed,\n    1: setConfirmed\n  } = useState(0);\n  const {\n    0: recovered,\n    1: setRecovered\n  } = useState(0);\n  const {\n    0: deaths,\n    1: setDeaths\n  } = useState(0);\n\n  async function handleChange(event) {\n    let data = await getCountryData(event.target.value);\n    data = data[0];\n    setSelectedCountry(data.country);\n    setConfirmed(data.confirmed);\n    setRecovered(data.recovered);\n    setDeaths(data.deaths);\n  }\n\n  async function getCountryData(country) {\n    return fetch(`https://covid-19-data.p.rapidapi.com/country?name=${country}`, {\n      method: \"GET\",\n      headers: {\n        \"X-RapidAPI-Key\": apiKey\n      }\n    }).then(res => res.json());\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Covid-19 Tracker\")), __jsx(\"main\", {\n    className: \"Index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(\"select\", {\n    onChange: handleChange,\n    name: \"countries\",\n    className: \"countries-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, countries.map(country => {\n    return __jsx(\"option\", {\n      key: country,\n      value: country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, country);\n  })), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, selectedCountry), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, confirmed), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, recovered), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, deaths)));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/ryangrunest/Developer/CurrentProjects/covid-19/pages/index.js"],"names":["React","useState","Head","countries","apiKey","fetch","Index","props","selectedCountry","setSelectedCountry","confirmed","setConfirmed","recovered","setRecovered","deaths","setDeaths","handleChange","event","data","getCountryData","target","value","country","method","headers","then","res","json","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCR,QAAQ,CAAC,aAAD,CAAtD;AACA,QAAM;AAAA,OAACS,SAAD;AAAA,OAAYC;AAAZ,MAA4BV,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM;AAAA,OAACW,SAAD;AAAA,OAAYC;AAAZ,MAA4BZ,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM;AAAA,OAACa,MAAD;AAAA,OAASC;AAAT,MAAsBd,QAAQ,CAAC,CAAD,CAApC;;AAEA,iBAAee,YAAf,CAA4BC,KAA5B,EAAmC;AACjC,QAAIC,IAAI,GAAG,MAAMC,cAAc,CAACF,KAAK,CAACG,MAAN,CAAaC,KAAd,CAA/B;AACAH,IAAAA,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAX;AACAT,IAAAA,kBAAkB,CAACS,IAAI,CAACI,OAAN,CAAlB;AACAX,IAAAA,YAAY,CAACO,IAAI,CAACR,SAAN,CAAZ;AACAG,IAAAA,YAAY,CAACK,IAAI,CAACN,SAAN,CAAZ;AACAG,IAAAA,SAAS,CAACG,IAAI,CAACJ,MAAN,CAAT;AACD;;AAED,iBAAeK,cAAf,CAA8BG,OAA9B,EAAuC;AACrC,WAAOjB,KAAK,CACT,qDAAoDiB,OAAQ,EADnD,EAEV;AACEC,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AAAE,0BAAkBpB;AAApB;AAFX,KAFU,CAAL,CAMLqB,IANK,CAMAC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANP,CAAP;AAOD;;AAED,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,EAIE;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAEX,YADZ;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,SAAS,EAAC,oBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGb,SAAS,CAACyB,GAAV,CAAcN,OAAO,IAAI;AACxB,WACE;AAAQ,MAAA,GAAG,EAAEA,OAAb;AAAsB,MAAA,KAAK,EAAEA,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OADH,CADF;AAKD,GANA,CALH,CADF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAId,eAAJ,CAfF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,SAAJ,CAhBF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,SAAJ,CAjBF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,MAAJ,CAlBF,CAJF,CADF;AA2BD,CApDD;;AAsDA,eAAeR,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Head from \"next/head\";\nimport { countries } from \"../countries.js\";\nimport { apiKey } from \"../apikey\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst Index = props => {\n  const [selectedCountry, setSelectedCountry] = useState(\"Afghanistan\");\n  const [confirmed, setConfirmed] = useState(0);\n  const [recovered, setRecovered] = useState(0);\n  const [deaths, setDeaths] = useState(0);\n\n  async function handleChange(event) {\n    let data = await getCountryData(event.target.value);\n    data = data[0];\n    setSelectedCountry(data.country);\n    setConfirmed(data.confirmed);\n    setRecovered(data.recovered);\n    setDeaths(data.deaths);\n  }\n\n  async function getCountryData(country) {\n    return fetch(\n      `https://covid-19-data.p.rapidapi.com/country?name=${country}`,\n      {\n        method: \"GET\",\n        headers: { \"X-RapidAPI-Key\": apiKey }\n      }\n    ).then(res => res.json());\n  }\n\n  return (\n    <>\n      <Head>\n        <title>Covid-19 Tracker</title>\n      </Head>\n      <main className=\"Index\">\n        <select\n          onChange={handleChange}\n          name=\"countries\"\n          className=\"countries-dropdown\"\n        >\n          {countries.map(country => {\n            return (\n              <option key={country} value={country}>\n                {country}\n              </option>\n            );\n          })}\n        </select>\n\n        <p>{selectedCountry}</p>\n        <p>{confirmed}</p>\n        <p>{recovered}</p>\n        <p>{deaths}</p>\n      </main>\n    </>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}