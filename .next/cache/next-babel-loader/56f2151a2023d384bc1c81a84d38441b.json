{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ryangrunest/Developer/CurrentProjects/covid-19/pages/index.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Head from \"next/head\";\nimport { countries } from \"../countries.js\";\nimport { apiKey } from \"../apikey\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar Index = function Index(props) {\n  var _useState = useState(\"Afghanistan\"),\n      selectedCountry = _useState[0],\n      setSelectedCountry = _useState[1];\n\n  var _useState2 = useState(0),\n      confirmed = _useState2[0],\n      setConfirmed = _useState2[1];\n\n  var _useState3 = useState(0),\n      recovered = _useState3[0],\n      setRecovered = _useState3[1];\n\n  var _useState4 = useState(0),\n      deaths = _useState4[0],\n      setDeaths = _useState4[1];\n\n  function handleChange(event) {\n    var data;\n    return _regeneratorRuntime.async(function handleChange$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getCountryData(event.target.value));\n\n          case 2:\n            data = _context.sent;\n            data = data[0];\n            setSelectedCountry(data.country);\n            setConfirmed(data.confirmed);\n            setRecovered(data.recovered);\n            setDeaths(data.deaths);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getCountryData(country) {\n    return _regeneratorRuntime.async(function getCountryData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", fetch(\"https://covid-19-data.p.rapidapi.com/country?name=\".concat(country), {\n              method: \"GET\",\n              headers: {\n                \"X-RapidAPI-Key\": apiKey\n              }\n            }).then(function (res) {\n              return res.json();\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Covid-19 Tracker\")), __jsx(\"main\", {\n    className: \"Index\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(\"select\", {\n    onChange: handleChange,\n    name: \"countries\",\n    className: \"countries-dropdown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, countries.map(function (country) {\n    return __jsx(\"option\", {\n      key: country,\n      value: country,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, country);\n  })), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, selectedCountry), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, confirmed), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, recovered), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, deaths)));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/ryangrunest/Developer/CurrentProjects/covid-19/pages/index.js"],"names":["React","useState","Head","countries","apiKey","fetch","Index","props","selectedCountry","setSelectedCountry","confirmed","setConfirmed","recovered","setRecovered","deaths","setDeaths","handleChange","event","getCountryData","target","value","data","country","method","headers","then","res","json","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AAAA,kBACyBN,QAAQ,CAAC,aAAD,CADjC;AAAA,MACdO,eADc;AAAA,MACGC,kBADH;;AAAA,mBAEaR,QAAQ,CAAC,CAAD,CAFrB;AAAA,MAEdS,SAFc;AAAA,MAEHC,YAFG;;AAAA,mBAGaV,QAAQ,CAAC,CAAD,CAHrB;AAAA,MAGdW,SAHc;AAAA,MAGHC,YAHG;;AAAA,mBAIOZ,QAAQ,CAAC,CAAD,CAJf;AAAA,MAIda,MAJc;AAAA,MAINC,SAJM;;AAMrB,WAAeC,YAAf,CAA4BC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACmBC,cAAc,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CADjC;;AAAA;AACMC,YAAAA,IADN;AAEEA,YAAAA,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAX;AACAZ,YAAAA,kBAAkB,CAACY,IAAI,CAACC,OAAN,CAAlB;AACAX,YAAAA,YAAY,CAACU,IAAI,CAACX,SAAN,CAAZ;AACAG,YAAAA,YAAY,CAACQ,IAAI,CAACT,SAAN,CAAZ;AACAG,YAAAA,SAAS,CAACM,IAAI,CAACP,MAAN,CAAT;;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,WAAeI,cAAf,CAA8BI,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,8CACSjB,KAAK,6DAC2CiB,OAD3C,GAEV;AACEC,cAAAA,MAAM,EAAE,KADV;AAEEC,cAAAA,OAAO,EAAE;AAAE,kCAAkBpB;AAApB;AAFX,aAFU,CAAL,CAMLqB,IANK,CAMA,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,aANH,CADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,EAIE;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAEX,YADZ;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,SAAS,EAAC,oBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGb,SAAS,CAACyB,GAAV,CAAc,UAAAN,OAAO,EAAI;AACxB,WACE;AAAQ,MAAA,GAAG,EAAEA,OAAb;AAAsB,MAAA,KAAK,EAAEA,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OADH,CADF;AAKD,GANA,CALH,CADF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAId,eAAJ,CAfF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,SAAJ,CAhBF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,SAAJ,CAjBF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,MAAJ,CAlBF,CAJF,CADF;AA2BD,CApDD;;AAsDA,eAAeR,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Head from \"next/head\";\nimport { countries } from \"../countries.js\";\nimport { apiKey } from \"../apikey\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst Index = props => {\n  const [selectedCountry, setSelectedCountry] = useState(\"Afghanistan\");\n  const [confirmed, setConfirmed] = useState(0);\n  const [recovered, setRecovered] = useState(0);\n  const [deaths, setDeaths] = useState(0);\n\n  async function handleChange(event) {\n    let data = await getCountryData(event.target.value);\n    data = data[0];\n    setSelectedCountry(data.country);\n    setConfirmed(data.confirmed);\n    setRecovered(data.recovered);\n    setDeaths(data.deaths);\n  }\n\n  async function getCountryData(country) {\n    return fetch(\n      `https://covid-19-data.p.rapidapi.com/country?name=${country}`,\n      {\n        method: \"GET\",\n        headers: { \"X-RapidAPI-Key\": apiKey }\n      }\n    ).then(res => res.json());\n  }\n\n  return (\n    <>\n      <Head>\n        <title>Covid-19 Tracker</title>\n      </Head>\n      <main className=\"Index\">\n        <select\n          onChange={handleChange}\n          name=\"countries\"\n          className=\"countries-dropdown\"\n        >\n          {countries.map(country => {\n            return (\n              <option key={country} value={country}>\n                {country}\n              </option>\n            );\n          })}\n        </select>\n\n        <p>{selectedCountry}</p>\n        <p>{confirmed}</p>\n        <p>{recovered}</p>\n        <p>{deaths}</p>\n      </main>\n    </>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}