{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ryangrunest/Developer/CurrentProjects/covid-19/pages/index.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { countries } from \"../countries.js\";\nimport { apiKey } from \"../apikey\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar Index = function Index(props) {\n  var _useState = useState(\"Afghanistan\"),\n      selectedCountry = _useState[0],\n      setSelectedCountry = _useState[1];\n\n  var _useState2 = useState(0),\n      confirmed = _useState2[0],\n      setConfirmed = _useState2[1];\n\n  var _useState3 = useState(0),\n      recovered = _useState3[0],\n      setRecovered = _useState3[1];\n\n  var _useState4 = useState(0),\n      deaths = _useState4[0],\n      setDeaths = _useState4[1];\n\n  function handleChange(event) {\n    var data;\n    return _regeneratorRuntime.async(function handleChange$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getCountryData(event.target.value));\n\n          case 2:\n            data = _context.sent;\n            console.log(data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getCountryData(country) {\n    return _regeneratorRuntime.async(function getCountryData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"https://covid-19-data.p.rapidapi.com/country?name=\".concat(country), {\n              method: \"GET\",\n              headers: {\n                \"X-RapidAPI-Key\": apiKey\n              }\n            }).then(function (res) {\n              return res.json();\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(\"select\", {\n    onChange: handleChange,\n    name: \"countries\",\n    className: \"countries-dropdown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, countries.map(function (country) {\n    return __jsx(\"option\", {\n      key: country,\n      value: country,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, country);\n  })), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, apiKey));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/ryangrunest/Developer/CurrentProjects/covid-19/pages/index.js"],"names":["React","useState","countries","apiKey","fetch","Index","props","selectedCountry","setSelectedCountry","confirmed","setConfirmed","recovered","setRecovered","deaths","setDeaths","handleChange","event","getCountryData","target","value","data","console","log","country","method","headers","then","res","json","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AAAA,kBACyBL,QAAQ,CAAC,aAAD,CADjC;AAAA,MACdM,eADc;AAAA,MACGC,kBADH;;AAAA,mBAEaP,QAAQ,CAAC,CAAD,CAFrB;AAAA,MAEdQ,SAFc;AAAA,MAEHC,YAFG;;AAAA,mBAGaT,QAAQ,CAAC,CAAD,CAHrB;AAAA,MAGdU,SAHc;AAAA,MAGHC,YAHG;;AAAA,mBAIOX,QAAQ,CAAC,CAAD,CAJf;AAAA,MAIdY,MAJc;AAAA,MAINC,SAJM;;AAMrB,WAAeC,YAAf,CAA4BC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACmBC,cAAc,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CADjC;;AAAA;AACMC,YAAAA,IADN;AAEEC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,WAAeH,cAAf,CAA8BM,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACQnB,KAAK,6DAC4CmB,OAD5C,GAET;AACEC,cAAAA,MAAM,EAAE,KADV;AAEEC,cAAAA,OAAO,EAAE;AAAE,kCAAkBtB;AAApB;AAFX,aAFS,CAAL,CAMJuB,IANI,CAMC,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,aANJ,CADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAEb,YADZ;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,SAAS,EAAC,oBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGb,SAAS,CAAC2B,GAAV,CAAc,UAAAN,OAAO,EAAI;AACxB,WACE;AAAQ,MAAA,GAAG,EAAEA,OAAb;AAAsB,MAAA,KAAK,EAAEA,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OADH,CADF;AAKD,GANA,CALH,CADF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIpB,MAAJ,CAfF,CADF;AAmBD,CAxCD;;AA0CA,eAAeE,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { countries } from \"../countries.js\";\nimport { apiKey } from \"../apikey\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst Index = props => {\n  const [selectedCountry, setSelectedCountry] = useState(\"Afghanistan\");\n  const [confirmed, setConfirmed] = useState(0);\n  const [recovered, setRecovered] = useState(0);\n  const [deaths, setDeaths] = useState(0);\n\n  async function handleChange(event) {\n    let data = await getCountryData(event.target.value);\n    console.log(data);\n  }\n\n  async function getCountryData(country) {\n    await fetch(\n      `https://covid-19-data.p.rapidapi.com/country?name=${country}`,\n      {\n        method: \"GET\",\n        headers: { \"X-RapidAPI-Key\": apiKey }\n      }\n    ).then(res => res.json());\n  }\n\n  return (\n    <div>\n      <select\n        onChange={handleChange}\n        name=\"countries\"\n        className=\"countries-dropdown\"\n      >\n        {countries.map(country => {\n          return (\n            <option key={country} value={country}>\n              {country}\n            </option>\n          );\n        })}\n      </select>\n\n      <p>{apiKey}</p>\n    </div>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}