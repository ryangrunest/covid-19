{"ast":null,"code":"var _jsxFileName = \"/Users/ryangrunest/Developer/CurrentProjects/covid-19/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { countries } from \"../countries.js\";\nimport { apiKey } from \"../apikey\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst Index = props => {\n  const {\n    0: selectedCountry,\n    1: setSelectedCountry\n  } = useState(\"Afghanistan\");\n  const {\n    0: confirmed,\n    1: setConfirmed\n  } = useState(0);\n  const {\n    0: recovered,\n    1: setRecovered\n  } = useState(0);\n  const {\n    0: deaths,\n    1: setDeaths\n  } = useState(0);\n\n  async function handleChange(event) {\n    // await setSelectedCountry(event.target.value);\n    let data = await updateState(event.target.value);\n  }\n\n  async function updateState(country) {\n    let data = await fetch(`https://covid-19-data.p.rapidapi.com/country?name=${country}`, {\n      method: \"GET\",\n      headers: {\n        \"X-RapidAPI-Key\": apiKey\n      }\n    }).then(res => res.json());\n    resolve(data);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"select\", {\n    onChange: handleChange,\n    name: \"countries\",\n    className: \"countries-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, countries.map(country => {\n    return __jsx(\"option\", {\n      key: country,\n      value: country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, country);\n  })), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, apiKey));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/ryangrunest/Developer/CurrentProjects/covid-19/pages/index.js"],"names":["React","useState","countries","apiKey","fetch","Index","props","selectedCountry","setSelectedCountry","confirmed","setConfirmed","recovered","setRecovered","deaths","setDeaths","handleChange","event","data","updateState","target","value","country","method","headers","then","res","json","resolve","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCP,QAAQ,CAAC,aAAD,CAAtD;AACA,QAAM;AAAA,OAACQ,SAAD;AAAA,OAAYC;AAAZ,MAA4BT,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM;AAAA,OAACU,SAAD;AAAA,OAAYC;AAAZ,MAA4BX,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM;AAAA,OAACY,MAAD;AAAA,OAASC;AAAT,MAAsBb,QAAQ,CAAC,CAAD,CAApC;;AAEA,iBAAec,YAAf,CAA4BC,KAA5B,EAAmC;AACjC;AACA,QAAIC,IAAI,GAAG,MAAMC,WAAW,CAACF,KAAK,CAACG,MAAN,CAAaC,KAAd,CAA5B;AACD;;AAED,iBAAeF,WAAf,CAA2BG,OAA3B,EAAoC;AAClC,QAAIJ,IAAI,GAAG,MAAMb,KAAK,CACnB,qDAAoDiB,OAAQ,EADzC,EAEpB;AACEC,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AAAE,0BAAkBpB;AAApB;AAFX,KAFoB,CAAL,CAMfqB,IANe,CAMVC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANG,CAAjB;AAOAC,IAAAA,OAAO,CAACV,IAAD,CAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAEF,YADZ;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,SAAS,EAAC,oBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGb,SAAS,CAAC0B,GAAV,CAAcP,OAAO,IAAI;AACxB,WACE;AAAQ,MAAA,GAAG,EAAEA,OAAb;AAAsB,MAAA,KAAK,EAAEA,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OADH,CADF;AAKD,GANA,CALH,CADF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIlB,MAAJ,CAfF,CADF;AAmBD,CAzCD;;AA2CA,eAAeE,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { countries } from \"../countries.js\";\nimport { apiKey } from \"../apikey\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst Index = props => {\n  const [selectedCountry, setSelectedCountry] = useState(\"Afghanistan\");\n  const [confirmed, setConfirmed] = useState(0);\n  const [recovered, setRecovered] = useState(0);\n  const [deaths, setDeaths] = useState(0);\n\n  async function handleChange(event) {\n    // await setSelectedCountry(event.target.value);\n    let data = await updateState(event.target.value);\n  }\n\n  async function updateState(country) {\n    let data = await fetch(\n      `https://covid-19-data.p.rapidapi.com/country?name=${country}`,\n      {\n        method: \"GET\",\n        headers: { \"X-RapidAPI-Key\": apiKey }\n      }\n    ).then(res => res.json());\n    resolve(data);\n  }\n\n  return (\n    <div>\n      <select\n        onChange={handleChange}\n        name=\"countries\"\n        className=\"countries-dropdown\"\n      >\n        {countries.map(country => {\n          return (\n            <option key={country} value={country}>\n              {country}\n            </option>\n          );\n        })}\n      </select>\n\n      <p>{apiKey}</p>\n    </div>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}