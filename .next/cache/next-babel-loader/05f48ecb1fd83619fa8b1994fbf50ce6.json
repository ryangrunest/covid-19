{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/ryangrunest/Developer/CurrentProjects/covid-19/pages/index.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { countries } from \"../countries.js\";\nimport { apiKey } from \"../apikey\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar Index = function Index(props) {\n  var _useState = useState(\"Afghanistan\"),\n      selectedCountry = _useState[0],\n      setSelectedCountry = _useState[1];\n\n  var _useState2 = useState(0),\n      confirmed = _useState2[0],\n      setConfirmed = _useState2[1];\n\n  var _useState3 = useState(0),\n      recovered = _useState3[0],\n      setRecovered = _useState3[1];\n\n  var _useState4 = useState(0),\n      deaths = _useState4[0],\n      setDeaths = _useState4[1];\n\n  function handleChange(event, index, value) {\n    setSelectedCountry(event.target.value);\n  }\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"select\", {\n    onChange: handleChange,\n    name: \"countries\",\n    className: \"countries-dropdown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, countries.map(function (country) {\n    return __jsx(\"option\", {\n      key: country,\n      value: country,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, country);\n  })), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, apiKey));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/ryangrunest/Developer/CurrentProjects/covid-19/pages/index.js"],"names":["React","useState","countries","apiKey","fetch","Index","props","selectedCountry","setSelectedCountry","confirmed","setConfirmed","recovered","setRecovered","deaths","setDeaths","handleChange","event","index","value","target","map","country"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AAAA,kBACyBL,QAAQ,CAAC,aAAD,CADjC;AAAA,MACdM,eADc;AAAA,MACGC,kBADH;;AAAA,mBAEaP,QAAQ,CAAC,CAAD,CAFrB;AAAA,MAEdQ,SAFc;AAAA,MAEHC,YAFG;;AAAA,mBAGaT,QAAQ,CAAC,CAAD,CAHrB;AAAA,MAGdU,SAHc;AAAA,MAGHC,YAHG;;AAAA,mBAIOX,QAAQ,CAAC,CAAD,CAJf;AAAA,MAIdY,MAJc;AAAA,MAINC,SAJM;;AAMrB,WAASC,YAAT,CAAsBC,KAAtB,EAA6BC,KAA7B,EAAoCC,KAApC,EAA2C;AACzCV,IAAAA,kBAAkB,CAACQ,KAAK,CAACG,MAAN,CAAaD,KAAd,CAAlB;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAEH,YADZ;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,SAAS,EAAC,oBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGb,SAAS,CAACkB,GAAV,CAAc,UAAAC,OAAO,EAAI;AACxB,WACE;AAAQ,MAAA,GAAG,EAAEA,OAAb;AAAsB,MAAA,KAAK,EAAEA,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OADH,CADF;AAKD,GANA,CALH,CADF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIlB,MAAJ,CAfF,CADF;AAmBD,CA7BD;;AA+BA,eAAeE,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { countries } from \"../countries.js\";\nimport { apiKey } from \"../apikey\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst Index = props => {\n  const [selectedCountry, setSelectedCountry] = useState(\"Afghanistan\");\n  const [confirmed, setConfirmed] = useState(0);\n  const [recovered, setRecovered] = useState(0);\n  const [deaths, setDeaths] = useState(0);\n\n  function handleChange(event, index, value) {\n    setSelectedCountry(event.target.value);\n  }\n\n  return (\n    <div>\n      <select\n        onChange={handleChange}\n        name=\"countries\"\n        className=\"countries-dropdown\"\n      >\n        {countries.map(country => {\n          return (\n            <option key={country} value={country}>\n              {country}\n            </option>\n          );\n        })}\n      </select>\n\n      <p>{apiKey}</p>\n    </div>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}